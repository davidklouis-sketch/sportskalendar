name: Pull Request Checks

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - 'backend/**'
      - '.github/workflows/**'

jobs:
  frontend-checks:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: cd frontend && npm ci
    
    - name: Run TypeScript check
      run: cd frontend && npx tsc --noEmit
    
    - name: Run ESLint
      run: cd frontend && npm run lint
    
    - name: Run unit tests
      run: cd frontend && npm test -- --run --coverage
    
    - name: Run tests with UI (for debugging)
      if: failure()
      run: cd frontend && npm run test:ui -- --run
      continue-on-error: true
    
    - name: Build application
      run: cd frontend && npm run build
    
    - name: Build Storybook
      run: cd frontend && npm run build-storybook
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          frontend/coverage/
          frontend/storybook-static/
        retention-days: 7
    
    - name: Comment PR with coverage
      uses: romeovs/lcov-reporter-action@v0.3.1
      if: success()
      with:
        lcov-file: frontend/coverage/lcov.info
        github-token: ${{ secrets.GITHUB_TOKEN }}
        delete-old-comments: true

  backend-checks:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
    
    - name: Install dependencies
      run: cd backend && npm ci
    
    - name: Run TypeScript check
      run: cd backend && npx tsc --noEmit
    
    - name: Build backend
      run: cd backend && npm run build

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  dependency-review:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    
    - name: Dependency Review
      uses: actions/dependency-review-action@v4
      with:
        fail-on-severity: moderate
